# docker-compose version on 20.04 (v1.25) does not support the version-less
# compose specfication, so we explicitly set the highest version
# it supports.
version: "3.7"
services:
  release-hatch: &service
    # image: ghcr.io/opensafely-core/release-hatch:${BACKEND}
    image: docker-proxy.opensafely.org/opensafely-core/release-hatch:latest
    container_name: release-hatch
    init: true
    restart: unless-stopped
    network_mode: bridge
    ports:
      - "443:8001"
    user: 10000:10000
    env_file:
      - /home/jobrunner/environ/01_defaults.env
      - /home/jobrunner/environ/02_secrets.env
      - /home/jobrunner/environ/03_backend.env
      - /home/jobrunner/environ/04_local.env
    environment:
      UVICORN_SSL_CERTFILE: /certs/release-hatch.crt
      UVICORN_SSL_KEYFILE: /certs/release-hatch.key
    volumes:
      - /srv/medium_privacy/workspaces:/workspaces
      - ./certs:/certs

  # Run a function test against the running release-hatch service
  # This runs a functional test shipped with release-hatch.
  release-hatch-test:

    # The version of docker-compose in Ubuntu 20.04 (1.25) does not support
    # `extends`, so we use YAML anchor tricks to create a test service that
    # extends the base service. This statement copies all the keys from the
    # anchor &service above
    <<: *service
    # We need to run from the host's network, so we can access release-hatch
    # via the proper DNS/port settings, because the validation for
    # release-hatch requires the configured DNS/ports to match.
    network_mode: host
    # assume self-signed cert
    environment:
      REQUESTS_CA_BUNDLE: /certs/release-hatch.crt
    command: python hatch/client.py test
