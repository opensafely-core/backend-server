# docker-compose version on 20.04 (v1.25) does not support the version-less
# compose specfication, so we explicitly set the highest version
# it supports.
version: "3.7"
services:
  airlock-base: &service
    image: docker-proxy.opensafely.org/opensafely-core/airlock:latest
    init: true
    restart: unless-stopped
    network_mode: bridge
    logging:
      driver: journald
      options:
        tag: airlock
    user: 10000:10000
    dns: 127.0.0.1  # disable dns, as there's no resolver running inside the container
    env_file:
      - /home/opensafely/config/01_defaults.env
      - /home/opensafely/config/02_secrets.env
      - /home/opensafely/config/03_backend.env
      - /home/opensafely/config/04_local.env
    environment:
      AIRLOCK_WORK_DIR: /workdir/
      AIRLOCK_WORKSPACE_DIR: /workspaces/
      AIRLOCK_REQUEST_DIR: /requests/
      DJANGO_DEBUG: "False"
    volumes:
      - /home/opensafely/airlock/workdir:/workdir
      - /srv/medium_privacy/workspaces:/workspaces:ro
      - /srv/medium_privacy/requests:/requests
      - ./certs:/certs
      # use our hardcoded DNS
      - /etc/hosts:/etc/hosts
    
  airlock:
    # The version of docker-compose in Ubuntu 20.04 (1.25) does not support
    # `extends`, so we use YAML anchor tricks to create a test service that
    # extends the base service. This statement copies all the keys from the
    # anchor &service above
    <<: *service
    container_name: airlock
    ports:
      - "443:8000"
    command: gunicorn --config gunicorn.conf.py --certfile /certs/airlock.crt --keyfile /certs/airlock.key airlock.wsgi


  airlock-file-uploader:
    depends_on: [airlock]
    # The version of docker-compose in Ubuntu 20.04 (1.25) does not support
    # `extends`, so we use YAML anchor tricks to create a test service that
    # extends the base service. This statement copies all the keys from the
    # anchor &service above
    <<: *service
    container_name: airlock-file-uploader
    command: python manage.py run_file_uploader
