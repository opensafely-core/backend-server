jobrunner_cli := 'docker compose run --rm agent python3 -m jobrunner.cli'

[private]
default:
  @just --list


# show the status of the agent service
status:
    docker compose ps agent

# stop the agent services
stop:
    docker compose stop

# restart the agent service
restart *args:
    docker compose up --no-build {{ args }} --detach agent

alias start:=restart

restart-if-running:
    #!/usr/bin/env bash
    set -euo pipefail

    # The quadruple opening braces are not a typo: they are how we have to escape the braces
    # inside a Justfile (the closing braces do not need escaping)
    JOBRUNNER_STATE=`docker compose ps --format "{{{{.State}}" agent`
    if [ "$JOBRUNNER_STATE" = "running" ]; then
        docker compose up --no-build --detach agent
    fi

# Update agent service and restart
deploy: && restart-if-running
    docker compose pull --quiet agent

# Run a cli command
cli command *ARGS:
    {{ jobrunner_cli }}.{{ command }} {{ ARGS }}

# show logs
logs *args:
    sudo journalctl -t agent --output=cat {{ args }}

# show logs for a specific job_id
logs-id job_id:
    sudo journalctl -t agent --output=cat -g {{ job_id }}

# list all currently running jobs
jobs-ls:
    lsjobs

# show docker stats for all currently running jobs
jobs-stats:
    docker stats --no-stream

# update docker image
update-docker-image image:
    #!/bin/bash
    set -euo pipefail
    # pull from proxy
    docker pull docker-proxy.opensafely.org/opensafely-core/{{ image }}
    # tag as if we'd pulled direct from ghcr.io
    docker tag docker-proxy.opensafely.org/opensafely-core/{{ image }} ghcr.io/opensafely-core/{{ image }}
    action_name="$(echo {{ image }} | awk -F: '{print $1}')"
    # delete dangling version of this image
    docker image prune --force --filter "label=org.opensafely.action=$action_name"
