jobrunner_cli := 'docker compose run jobrunner python3 -m jobrunner.cli'

[private]
default:
  @just --list


# show the status of the jobrunner service
status:
    docker compose status jobrunner

# stop the jobrunner service
stop:
    docker-compose stop

# restart the jobrunner service
restart *args:
    docker-compose up --no-build {{ args }} --detach jobrunner

alias start:=restart

# Update jobrunner and restart
deploy: && restart
    echo "Pulling image"
    docker compose pull --quiet jobrunner

# run jobrunner db migrations
migrate:
    {{ jobrunner_cli }}.migrate

# destroy containers & volumes for all running jobs
prepare-for-reboot: stop
    {{ jobrunner_cli }}.prepare_for_reboot

# stop accepting new jobs
pause:
    {{ jobrunner_cli }}.flags set paused=true

# start accepting new jobs
unpause:
    {{ jobrunner_cli }}.flags set paused=

# show jobrunner logs (using `docker compose logs`)
logs *args:
    sudo journalctl -t jobrunner {{ args }}

# show jobrunner logs for a specific job_id
logs-id job_id:
    sudo journalctl -t jobrunner -g {{ job_id }}

# list all currently running jobs
jobs-ls:
    lsjobs

# show docker stats for all currently running jobs
jobs-stats:
    docker stats --no-stream

# retry a specific job
job-retry job_id:
    {{ jobrunner_cli }}.retry_job {{ job_id }}

# kill a job
kill-job *args:
    {{ jobrunner_cli }}.kill_job {{ args }}

# manually enable database maintenance mode. Kill and re-queue all db jobs.
db-maintenance-on:
    {{ jobrunner_cli }}.flags set mode=db-maintenance manual-db-maintenance=on

# manually disable database maintenance mode
db-maintenance-off:
    {{ jobrunner_cli }}.flags set mode= manual-db-maintenance=

# update docker image
update-docker-image image:
    #!/bin/bash
    set -euo pipefail
    # pull from proxy
    docker pull docker-proxy.opensafely.org/opensafely-core/{{ image }}
    # tag as if we'd pulled direct from ghcr.io
    docker tag docker-proxy.opensafely.org/opensafely-core/{{ image }} ghcr.io/opensafely-core/{{ image }}
    action_name="$(echo {{ image }} | awk -F: '{print $1}')"
    # delete dangling version of this image
    docker image prune --force --filter "label=org.opensafely.action=$action_name"

# add a job run run
add-job repo action:
    {{ jobrunner_cli }}.add_job {{ repo }} {{ action }}
